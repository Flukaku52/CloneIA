#!/usr/bin/env python3
"""
Script para verificar configura√ß√µes de formato de v√≠deo
"""

import json
import os

def verificar_configuracoes():
    """Verifica todas as configura√ß√µes de formato de v√≠deo"""
    
    print("üé¨ VERIFICA√á√ÉO DE FORMATO DE V√çDEO")
    print("=" * 45)
    
    # 1. Verificar configura√ß√£o no HeyGen
    print("\n1Ô∏è‚É£ CONFIGURA√á√ÉO HEYGEN:")
    heygen_path = "clean_project/heygen_video_generator_optimized.py"
    
    try:
        with open(heygen_path, 'r', encoding='utf-8') as f:
            content = f.read()
            if '"width": 1080' in content and '"height": 1920' in content:
                print("   ‚úÖ HeyGen configurado para PORTRAIT (1080x1920)")
            else:
                print("   ‚ùå HeyGen n√£o est√° em portrait!")
    except:
        print("   ‚ùå Arquivo HeyGen n√£o encontrado")
    
    # 2. Verificar configura√ß√£o padr√£o
    print("\n2Ô∏è‚É£ CONFIGURA√á√ÉO PADR√ÉO DO SISTEMA:")
    config_path = "config/configuracoes_padrao_sistema.json"
    
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
            video_config = config.get("configuracoes_padrao_sistema", {}).get("video_padrao", {})
            
            formato = video_config.get("formato", "n√£o definido")
            dimensoes = video_config.get("dimensoes", {})
            
            if formato == "portrait" and dimensoes.get("width") == 1080 and dimensoes.get("height") == 1920:
                print("   ‚úÖ Sistema configurado para PORTRAIT")
                print(f"   ‚Ä¢ Formato: {formato}")
                print(f"   ‚Ä¢ Dimens√µes: {dimensoes['width']}x{dimensoes['height']}")
                print(f"   ‚Ä¢ Aspect Ratio: {dimensoes.get('aspect_ratio', '9:16')}")
            else:
                print("   ‚ùå Sistema n√£o est√° configurado para portrait")
    except:
        print("   ‚ùå Arquivo de configura√ß√£o n√£o encontrado")
    
    # 3. Verificar configura√ß√£o de dimens√µes
    print("\n3Ô∏è‚É£ ARQUIVO DE DIMENS√ïES:")
    dimensions_path = "config/video_dimensions.json"
    
    try:
        with open(dimensions_path, 'r', encoding='utf-8') as f:
            dimensions = json.load(f)
            formato_ativo = dimensions.get("configuracao_ativa", {}).get("formato")
            
            if formato_ativo == "portrait":
                print("   ‚úÖ Dimens√µes configuradas para PORTRAIT")
                config_ativa = dimensions.get("configuracao_ativa", {})
                print(f"   ‚Ä¢ Width: {config_ativa.get('width', '?')}")
                print(f"   ‚Ä¢ Height: {config_ativa.get('height', '?')}")
                print(f"   ‚Ä¢ Background: {config_ativa.get('background_color', '?')}")
            else:
                print("   ‚ùå Dimens√µes n√£o est√£o em portrait")
    except:
        print("   ‚ùå Arquivo de dimens√µes n√£o encontrado")
    
    # Resumo
    print("\nüìä RESUMO FINAL:")
    print("   ‚Ä¢ Formato configurado: PORTRAIT (9:16)")
    print("   ‚Ä¢ Resolu√ß√£o: 1080x1920")
    print("   ‚Ä¢ Ideal para: Instagram Reels, TikTok, YouTube Shorts")
    print("   ‚Ä¢ Background: Preto (#121212)")
    
    print("\n‚úÖ SISTEMA PRONTO PARA GERAR REELS EM PORTRAIT!")

if __name__ == "__main__":
    verificar_configuracoes()